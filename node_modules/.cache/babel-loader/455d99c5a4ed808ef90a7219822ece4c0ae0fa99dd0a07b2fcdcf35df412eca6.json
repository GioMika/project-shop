{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { BASE_URL } from \"../../utils/constants\";\nexport const getcategories = createAsyncThunk('categories/getcategories', async (_, thunkAPI) => {\n  try {\n    const response = await fetch(BASE_URL);\n    const data = await response.json();\n    rt;\n  } catch (err) {\n    console.log(err);\n    return thunkAPI.rejectWithValue(err);\n  }\n});\nconst categoriesSlice = createSlice({\n  name: 'categories',\n  initialState: {\n    list: [],\n    isLOading: false\n  },\n  extraReducers: builder => {\n    builder.addCase(getcategories.pending, state => {\n      state.isLOading = true;\n    });\n    builder.addCase(getcategories.fulfilled, (state, {\n      payload\n    }) => {\n      state.list = payload;\n      state.isLOading = false;\n    });\n    builder.addCase(getcategories.rejected, (state, {\n      payload\n    }) => {\n      state.isLOading = false;\n    });\n  }\n});\nexport default categoriesSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","BASE_URL","getcategories","_","thunkAPI","response","fetch","data","json","rt","err","console","log","rejectWithValue","categoriesSlice","name","initialState","list","isLOading","extraReducers","builder","addCase","pending","state","fulfilled","payload","rejected","reducer"],"sources":["/Users/giomikadze/Desktop/projecApp/project/src/features/categories/categoriesSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { BASE_URL } from \"../../utils/constants\";\n\nexport const getcategories = createAsyncThunk(\n  'categories/getcategories', async (_, thunkAPI) => {\n    try {\n      const response = await fetch(BASE_URL)\n      const data = await response.json()\n      rt\n    } catch (err) {\n      console.log(err);\n      return thunkAPI.rejectWithValue(err)\n    }\n  })\n\n\nconst categoriesSlice = createSlice({\n  name: 'categories',\n  initialState: {\n    list: [],\n  isLOading:false,\n  },\n\n  extraReducers: (builder) => {\n    builder.addCase(getcategories.pending, (state) => {\n     state.isLOading= true;\n    })\n    builder.addCase(getcategories.fulfilled, (state, { payload }) => {\n      state.list = payload;\n      state.isLOading= false\n    })\n    builder.addCase(getcategories.rejected, (state, { payload }) => {\n      state.isLOading= false\n    })\n  }\n\n})\n\nexport default categoriesSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,QAAQ,QAAQ,uBAAuB;AAEhD,OAAO,MAAMC,aAAa,GAAGH,gBAAgB,CAC3C,0BAA0B,EAAE,OAAOI,CAAC,EAAEC,QAAQ,KAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,QAAQ,CAAC;IACtC,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCC,EAAE;EACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChB,OAAON,QAAQ,CAACS,eAAe,CAACH,GAAG,CAAC;EACtC;AACF,CAAC,CAAC;AAGJ,MAAMI,eAAe,GAAGd,WAAW,CAAC;EAClCe,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE;IACZC,IAAI,EAAE,EAAE;IACVC,SAAS,EAAC;EACV,CAAC;EAEDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACnB,aAAa,CAACoB,OAAO,EAAGC,KAAK,IAAK;MACjDA,KAAK,CAACL,SAAS,GAAE,IAAI;IACtB,CAAC,CAAC;IACFE,OAAO,CAACC,OAAO,CAACnB,aAAa,CAACsB,SAAS,EAAE,CAACD,KAAK,EAAE;MAAEE;IAAQ,CAAC,KAAK;MAC/DF,KAAK,CAACN,IAAI,GAAGQ,OAAO;MACpBF,KAAK,CAACL,SAAS,GAAE,KAAK;IACxB,CAAC,CAAC;IACFE,OAAO,CAACC,OAAO,CAACnB,aAAa,CAACwB,QAAQ,EAAE,CAACH,KAAK,EAAE;MAAEE;IAAQ,CAAC,KAAK;MAC9DF,KAAK,CAACL,SAAS,GAAE,KAAK;IACxB,CAAC,CAAC;EACJ;AAEF,CAAC,CAAC;AAEF,eAAeJ,eAAe,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}