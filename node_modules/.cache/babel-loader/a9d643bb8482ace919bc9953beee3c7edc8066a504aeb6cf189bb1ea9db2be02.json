{"ast":null,"code":"import { createSlice, fetchBaseQuery } from \"@reduxjs/toolkit\";\nimport { BASE_URL } from \"../../utils/constants\";\nexport const apiSclice = createSlice({\n  reducerPath: 'api',\n  basQuery: fetchBaseQuery({\n    baseUrl: BASE_URL\n  }),\n  tagTypes: ['Product'],\n  andPoints: builder => ({\n    getQuery: builder.query({\n      query: ({\n        id\n      }) => `/product/${id}`,\n      providesTags: ['products']\n    })\n  })\n});\nexport const {\n  useGetProductQuery\n} = apiSclice;","map":{"version":3,"names":["createSlice","fetchBaseQuery","BASE_URL","apiSclice","reducerPath","basQuery","baseUrl","tagTypes","andPoints","builder","getQuery","query","id","providesTags","useGetProductQuery"],"sources":["/Users/giomikadze/Desktop/projecApp/project/src/features/api/apiSlice.js"],"sourcesContent":["import { createSlice,fetchBaseQuery } from \"@reduxjs/toolkit\";\nimport { BASE_URL } from \"../../utils/constants\";\n\n\nexport const apiSclice = createSlice({\nreducerPath:'api',\nbasQuery:fetchBaseQuery({baseUrl:BASE_URL}),\ntagTypes:['Product'],\nandPoints:(builder) => ({\n  getQuery:builder.query({\n    query:({id}) => `/product/${id}`,\n    providesTags:['products'],\n  })\n})\n})\n\nexport const {useGetProductQuery} = apiSclice;"],"mappings":"AAAA,SAASA,WAAW,EAACC,cAAc,QAAQ,kBAAkB;AAC7D,SAASC,QAAQ,QAAQ,uBAAuB;AAGhD,OAAO,MAAMC,SAAS,GAAGH,WAAW,CAAC;EACrCI,WAAW,EAAC,KAAK;EACjBC,QAAQ,EAACJ,cAAc,CAAC;IAACK,OAAO,EAACJ;EAAQ,CAAC,CAAC;EAC3CK,QAAQ,EAAC,CAAC,SAAS,CAAC;EACpBC,SAAS,EAAEC,OAAO,KAAM;IACtBC,QAAQ,EAACD,OAAO,CAACE,KAAK,CAAC;MACrBA,KAAK,EAACA,CAAC;QAACC;MAAE,CAAC,KAAM,YAAWA,EAAG,EAAC;MAChCC,YAAY,EAAC,CAAC,UAAU;IAC1B,CAAC;EACH,CAAC;AACD,CAAC,CAAC;AAEF,OAAO,MAAM;EAACC;AAAkB,CAAC,GAAGX,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}